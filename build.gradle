// set as java application
apply plugin: 'application'

repositories {
    mavenCentral()
}

dependencies {
   // https://mvnrepository.com/artifact/org.json/json
compile group: 'org.json', name: 'json', version: '20200518'
}


//define main class
mainClassName = 'Concentration'

task TCPServer(type: JavaExec) {
  group 'tcp'
  description 'Displays a GUI for a game of concentration'

  classpath = sourceSets.main.runtimeClasspath

  main = 'Solution.tcp.Server'

  if (project.hasProperty("port")) {
    args(project.getProperty('port'));
  }
  standardInput = System.in

}

task TCPClient(type: JavaExec) {
  group 'tcp'
  description 'Takes an image and makes the rebus library'

  classpath = sourceSets.main.runtimeClasspath

  main = 'Solution.tcp.Client'

  // allows you to provide host, host&port  (which order does not matter as long as named correctly)
  // run with arguments e.g.: gradle SocketClient -Phost=localhost -Pport=8000
  if (project.hasProperty("host") && project.hasProperty("port")) {
    args(project.getProperty('host'), project.getProperty('port'));
  }  else if (project.hasProperty("host")) {
    args(project.getProperty('host'));
  } 

  standardInput = System.in

}

task UDPServer(type: JavaExec) {
  group 'udp'
  description 'Displays a GUI for a game of concentration'

  classpath = sourceSets.main.runtimeClasspath

  main = 'Solution.udp.Server'

    if (project.hasProperty("port")) {
    args(project.getProperty('port'));
    }

  standardInput = System.in
}

task UDPClient(type: JavaExec) {
  group 'udp'
  description 'Takes an image and makes the rebus library'

  classpath = sourceSets.main.runtimeClasspath

  main = 'Solution.udp.Client'

    // allows you to provide host, host&port  (which order does not matter as long as named correctly)
  // run with arguments e.g.: gradle SocketClient -Phost=localhost -Pport=8000
  if (project.hasProperty("host") && project.hasProperty("port")) {
    args(project.getProperty('host'), project.getProperty('port'));
  }  else if (project.hasProperty("host")) {
    args(project.getProperty('host'));
  } 

  standardInput = System.in
}





